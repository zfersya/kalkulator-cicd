name: Kalkulator CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integrate-test-inspect:
    name: ⚙️ Integrasi, Tes & Inspeksi
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Kode (Continuous Integration)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Diperlukan untuk analisis SonarQube yang akurat

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # atau versi LTS terbaru

      # Langkah Build (jika ada, misal: npm install, npm run build)
      # Untuk kalkulator statis ini, tidak ada build JS/CSS khusus
      # - name: 🔨 Build Aplikasi (jika perlu)
      #   run: echo "Tidak ada langkah build spesifik."

      - name: 🧪 Jalankan Tes Unit (Continuous Testing)
        run: |
          echo "Menjalankan tes unit kalkulator..."
          node tests/calculator.test.js

      - name: ☕ Setup JDK 17 untuk SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📦 Cache paket SonarQube
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🧐 Analisis SonarCloud (Continuous Inspection)
        uses: SonarSource/sonarcloud-github-action@master # Selalu gunakan versi terbaru atau stabil
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
            # Jika ada laporan cakupan tes (misal dari Jest LCOV), tambahkan:
            # -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

  build-docker-image:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: integrate-test-inspect # Jalankan setelah job sebelumnya sukses
    steps:
      - name: ⬇️ Checkout Kode
        uses: actions/checkout@v4

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .  # Direktori root proyek sebagai konteks
          file: ./Dockerfile/Dockerfile  # Path ke file Dockerfile di dalam konteks
          push: false
          tags: local/kalkulator-cicd:latest

      # Opsional: Login ke Docker Hub jika ingin push image
      # - name: 🔑 Login ke Docker Hub
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile/Dockerfile
          push: false # Set 'true' untuk push ke registry (misal Docker Hub)
          tags: local/kalkulator-cicd:latest # Ganti jika push ke registry
          # Contoh jika push: ${{ secrets.DOCKERHUB_USERNAME }}/kalkulator-cicd:latest

  deploy-to-github-pages:
    name: 🚀 Deploy ke GitHub Pages (Continuous Delivery/Deployment)
    runs-on: ubuntu-latest
    needs: integrate-test-inspect # Pastikan tes dan inspeksi lulus sebelum deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Hanya deploy dari branch main
    permissions:
      contents: write # Diperlukan untuk push ke branch gh-pages
    steps:
      - name: ⬇️ Checkout Kode
        uses: actions/checkout@v4

      # Jika ada langkah build sebelum deploy (misalnya, optimasi aset)
      # - name: 🔨 Build Halaman Web (jika perlu)
      #   run: npm install && npm run build-static # Contoh

      - name: 🌍 Deploy ke GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./ # Direktori yang akan di-deploy (root untuk kalkulator ini)
          # publish_branch: gh-pages # Default branch tujuan adalah gh-pages
          # user_name: 'github-actions[bot]'
          # user_email: 'github-actions[bot]@users.noreply.github.com'
          # commit_message: 'Deploy kalkulator ke GitHub Pages'
